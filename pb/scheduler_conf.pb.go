// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.12.4
// source: scheduler_conf.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InnerThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Cpuset *string `protobuf:"bytes,2,opt,name=cpuset" json:"cpuset,omitempty"`
	Policy *string `protobuf:"bytes,3,opt,name=policy" json:"policy,omitempty"`
	Prio   *uint32 `protobuf:"varint,4,opt,name=prio,def=1" json:"prio,omitempty"`
}

// Default values for InnerThread fields.
const (
	Default_InnerThread_Prio = uint32(1)
)

func (x *InnerThread) Reset() {
	*x = InnerThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerThread) ProtoMessage() {}

func (x *InnerThread) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerThread.ProtoReflect.Descriptor instead.
func (*InnerThread) Descriptor() ([]byte, []int) {
	return file_scheduler_conf_proto_rawDescGZIP(), []int{0}
}

func (x *InnerThread) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *InnerThread) GetCpuset() string {
	if x != nil && x.Cpuset != nil {
		return *x.Cpuset
	}
	return ""
}

func (x *InnerThread) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *InnerThread) GetPrio() uint32 {
	if x != nil && x.Prio != nil {
		return *x.Prio
	}
	return Default_InnerThread_Prio
}

type SchedulerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy             *string           `protobuf:"bytes,1,opt,name=policy" json:"policy,omitempty"`
	RoutineNum         *uint32           `protobuf:"varint,2,opt,name=routine_num,json=routineNum" json:"routine_num,omitempty"`
	DefaultProcNum     *uint32           `protobuf:"varint,3,opt,name=default_proc_num,json=defaultProcNum" json:"default_proc_num,omitempty"`
	ProcessLevelCpuset *string           `protobuf:"bytes,4,opt,name=process_level_cpuset,json=processLevelCpuset" json:"process_level_cpuset,omitempty"`
	Threads            []*InnerThread    `protobuf:"bytes,5,rep,name=threads" json:"threads,omitempty"`
	ClassicConf        *ClassicConf      `protobuf:"bytes,6,opt,name=classic_conf,json=classicConf" json:"classic_conf,omitempty"`
	ChoreographyConf   *ChoreographyConf `protobuf:"bytes,7,opt,name=choreography_conf,json=choreographyConf" json:"choreography_conf,omitempty"`
}

func (x *SchedulerConf) Reset() {
	*x = SchedulerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerConf) ProtoMessage() {}

func (x *SchedulerConf) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerConf.ProtoReflect.Descriptor instead.
func (*SchedulerConf) Descriptor() ([]byte, []int) {
	return file_scheduler_conf_proto_rawDescGZIP(), []int{1}
}

func (x *SchedulerConf) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *SchedulerConf) GetRoutineNum() uint32 {
	if x != nil && x.RoutineNum != nil {
		return *x.RoutineNum
	}
	return 0
}

func (x *SchedulerConf) GetDefaultProcNum() uint32 {
	if x != nil && x.DefaultProcNum != nil {
		return *x.DefaultProcNum
	}
	return 0
}

func (x *SchedulerConf) GetProcessLevelCpuset() string {
	if x != nil && x.ProcessLevelCpuset != nil {
		return *x.ProcessLevelCpuset
	}
	return ""
}

func (x *SchedulerConf) GetThreads() []*InnerThread {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *SchedulerConf) GetClassicConf() *ClassicConf {
	if x != nil {
		return x.ClassicConf
	}
	return nil
}

func (x *SchedulerConf) GetChoreographyConf() *ChoreographyConf {
	if x != nil {
		return x.ChoreographyConf
	}
	return nil
}

var File_scheduler_conf_proto protoreflect.FileDescriptor

var file_scheduler_conf_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x63,
	0x79, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x63, 0x68, 0x6f, 0x72, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0b, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x70,
	0x75, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x70, 0x75, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x15, 0x0a, 0x04, 0x70, 0x72,
	0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x04, 0x70, 0x72, 0x69,
	0x6f, 0x22, 0xf6, 0x02, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x70, 0x75, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x43, 0x70, 0x75, 0x73, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x6f, 0x6c,
	0x6c, 0x6f, 0x2e, 0x63, 0x79, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x6f, 0x6c,
	0x6c, 0x6f, 0x2e, 0x63, 0x79, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x51, 0x0a, 0x11, 0x63, 0x68, 0x6f, 0x72, 0x65,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x63, 0x79, 0x62, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x10, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62,
}

var (
	file_scheduler_conf_proto_rawDescOnce sync.Once
	file_scheduler_conf_proto_rawDescData = file_scheduler_conf_proto_rawDesc
)

func file_scheduler_conf_proto_rawDescGZIP() []byte {
	file_scheduler_conf_proto_rawDescOnce.Do(func() {
		file_scheduler_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_scheduler_conf_proto_rawDescData)
	})
	return file_scheduler_conf_proto_rawDescData
}

var file_scheduler_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_scheduler_conf_proto_goTypes = []interface{}{
	(*InnerThread)(nil),      // 0: apollo.cyber.proto.InnerThread
	(*SchedulerConf)(nil),    // 1: apollo.cyber.proto.SchedulerConf
	(*ClassicConf)(nil),      // 2: apollo.cyber.proto.ClassicConf
	(*ChoreographyConf)(nil), // 3: apollo.cyber.proto.ChoreographyConf
}
var file_scheduler_conf_proto_depIdxs = []int32{
	0, // 0: apollo.cyber.proto.SchedulerConf.threads:type_name -> apollo.cyber.proto.InnerThread
	2, // 1: apollo.cyber.proto.SchedulerConf.classic_conf:type_name -> apollo.cyber.proto.ClassicConf
	3, // 2: apollo.cyber.proto.SchedulerConf.choreography_conf:type_name -> apollo.cyber.proto.ChoreographyConf
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_scheduler_conf_proto_init() }
func file_scheduler_conf_proto_init() {
	if File_scheduler_conf_proto != nil {
		return
	}
	file_classic_conf_proto_init()
	file_choreography_conf_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scheduler_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scheduler_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scheduler_conf_proto_goTypes,
		DependencyIndexes: file_scheduler_conf_proto_depIdxs,
		MessageInfos:      file_scheduler_conf_proto_msgTypes,
	}.Build()
	File_scheduler_conf_proto = out.File
	file_scheduler_conf_proto_rawDesc = nil
	file_scheduler_conf_proto_goTypes = nil
	file_scheduler_conf_proto_depIdxs = nil
}
